-- Cerinta 12

-- 1.
-- Afiseaza numele produselor și prețurile acestora din toate comenzile plasate de clientul Avram Gabriela.

--   subcerere sincronizata în care intervin 3 tabele ( produse, produse_comenzi, clienti)
--   utilizarea a doua functii pe siruri de caractere

select p.nume_produs, p.pret_produs
from produse p
where exists (
    select 'x'
    from produse_comenzi pc
    join comenzi c on pc.id_comanda = c.id_comanda
    join clienti cl on c.id_client = cl.id_client
    where pc.id_produs = p.id_produs
    and lower(cl.nume_client) = 'avram'
    and lower(cl.prenume_client) = 'gabriela'
);

-- 2.
-- Pentru fiecare magazin, sa se afiseze denumirea acestuia,
-- precum si numele şi salariul celor mai slab platiti angajati din cadrul sau.

-- subcerere nesincronizata în clauza FROM

select m.nume_magazin, ang.nume, ang.salariu
from magazine m,
    (select a.id_magazin, a.nume_angajat as nume, a.salariu_angajat as salariu
    from angajati a
    where a.salariu_angajat = (select min(a2.salariu_angajat)
                               from angajati a2
                               where a2.id_magazin = a.id_magazin)
    ) ang
where m.id_magazin = ang.id_magazin;

-- 3.
-- Afisati codul magazinului, numele magazinului, salariul mediu si numarul de produse pentru fiecare magazin. 
-- Filtrati rezultatele astfel incat sa includa doar magazinele care au cel putin 2 produse si salariul fiecarui
-- angajat sa fie mai mic decat cel mai mic salariu mediu al angajatilor de la oricare alt magazin.

-- grupări de date cu subcereri nesincronizate in care intervin cel putin 3 tabele, funcții grup, filtrare la nivel de grupuri

select m.id_magazin, m.nume_magazin, avg(a.salariu_angajat) as salariu_mediu, count(pm.id_produs) as numar_produse 
from magazine m
join angajati a on m.id_magazin = a.id_magazin
join produse_magazine pm on m.id_magazin = pm.id_magazin
where a.salariu_angajat < ( select min(avg_salariu) 
                            from (select avg(salariu_angajat) AS avg_salariu
                                  from angajati
                                  group by id_magazin
                                  )
) 
group by m.id_magazin, m.nume_magazin
having count(pm.id_produs) >= 2;

-- 4.

-- Afisati numele produsului, nota recenziei (inlocuind valorile nule cu 0) si starea recenziei
--(afisand "Fara recenzii" pentru valorile nule si "Cu recenzii" pentru valorile nenule) pentru fiecare produs . 
-- Rezultatele sunt sortate in ordine descrescatoare dupa numele produsului.

-- ordonare si utilizarea funcțiilor NVL și DECODE (in cadrul aceleiasi cereri)

select p.nume_produs, nvl(r.nota_recenzie, 0) as nota_recenzie,
       decode(r.nota_recenzie, null, 'Fără recenzii', 'Cu recenzii') as stare_recenzie
from produse p
left join recenzii r on p.id_produs = r.id_produs
order by p.nume_produs desc;

-- 5.
-- Sa se afiseze numele clientului, suma totala a platilor efectuate de fiecare client, luna si ziua inregistrarii clientului si 
-- o comparatie a platilor fiecarui client cu media platilor pentru toti clientii. 
-- Media platilor sa fie calculata pe baza sumelor totale ale fiecarui client.

-- 2 funcții pe date calendaristice , clauza WITH
with
plata_totala_client as (  select cl.id_client,cl.nume_client,cl.prenume_client,sum(p.total_plata) as plata_client,cl.data_inregistrare
                           from clienti cl
                           join comenzi co on cl.id_client = co.id_client
                           join plati p on co.id_plata = p.id_plata
                           group by cl.id_client,cl.nume_client,cl.prenume_client,cl.data_inregistrare
                         ),
plata_medie_client as (select avg(plata_client) AS plata_medie
                        from plata_totala_client
                      )
select ptc.nume_client, ptc.prenume_client,ptc.plata_client, 
to_char(ptc.data_inregistrare,'MM')luna_inregistrare,to_char(ptc.data_inregistrare,'DD') zi_inregistrare,
case
    when ptc.plata_client > pmc.plata_medie then 'Peste medie'
    when ptc.plata_client < pmc.plata_medie then 'Sub medie'
    else 'Medie'
end as comparatie
from
  plata_totala_client ptc,
  plata_medie_client pmc;

-- Cerinta 13

--1 Actualizarea unui client
update clienti
set nume_client = 'Noul Nume', prenume_client = 'Noul Prenume'
where id_client = (
  select id_client
  from clienti
  where nume_client = 'Vechiul Nume' and prenume_client = 'Vechiul Prenume'
);

--2 Stergerea comenzilor unui client

delete from comenzi
where id_client = (
  select id_client
  from clienti
  where nume_client = 'Nume Client' and prenume_client = 'Prenume Client'
);

--3 Actualizarea platilor dupa o anumita data cu un adaos de 10%

update plati
set total_plata = total_plata * 1.1
where id_plata in (
  select id_plata
  from comenzi
  where data_plasare > to_date('2022-01-01', 'YYYY-MM-DD')
);

-- Cerinta 14

-- Rezultatul final al vizualizarii va fi un set de date care va afisa numele si prenumele clientului,
-- numarul total de comenzi, suma totala a platilor si data cea mai recenta de plasare
-- a unei comenzi pentru fiecare client.
create view vizualizare_comenzi as

select c.nume_client, c.prenume_client, count(co.id_comanda) as numar_comenzi,
sum(p.total_plata) AS suma_totala_plati,max(co.data_plasare) AS ultima_data_plasare
from clienti c
join comenzi co on c.id_client = co.id_client
join plati p on co.id_plata = p.id_plata
group by c.nume_client, c.prenume_client;

-- Exemple de operatii LMD permise
-- SELECT: Puteti executa operatii de selectare asupra vizualizarii

select * from vizualizare_comenzi;

-- JOIN: Puteti efectua operatii de imbinare cu alte tabele

select vc.*,c.email_client,c.telefon_client
from vizualizare_comenzi vc
join clienti c on vc.nume_client=c.nume_client;

-- Exemplu de operatie LMD nepermisa pe vizualizare
-- UPDATE:
update vizualizare_comenzi
set numar_comenzi = 10
where nume_client = 'Dumitru';

-- Cerinta 15

-- o cerere ce utilizează operația outerjoin pe minimum 4 tabele
-- Sa se afiseze numele magazinului, id-ul magazinului, id-ul produsului 
-- si id-ul recenziei pentru fiecare inregistrare disponibila in baza de date. 
select m.nume_magazin, pm.id_magazin, p.id_produs, r.id_recenzie
from magazine m
left join produse_magazine pm on m.id_magazin = pm.id_magazin
inner join produse p on pm.id_produs = p.id_produs
right join recenzii r on pm.id_produs = r.id_produs;

-- o cerere ce utilizează operația division
-- Afiseaza numele produselor care nu au fost comandate de niciun client

select p.nume_produs
from produse p
minus
select p.nume_produs
from produse p
join produse_comenzi pc on p.id_produs = pc.id_produs
join comenzi c on pc.id_comanda = c.id_comanda;

-- o cerere care implementeaza analiza top-n
-- Afiseaza primele 5 produse (descrescator) in functie de numarul de recenzii
select *
from (
    select p.nume_produs, count(r.id_recenzie) as numar_recenzii
    from produse p
    left join produse_magazine pm on p.id_produs = pm.id_produs
    left join recenzii r on pm.id_produs = r.id_produs
    group by p.nume_produs
    order by count(r.id_recenzie) desc
)
where rownum <= 3;